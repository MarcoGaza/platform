package cn.econets.blossom.module.crm.controller.admin.receivable.vo.receivable;

import cn.econets.blossom.framework.common.validation.InEnum;
import cn.econets.blossom.module.crm.enums.common.CrmAuditStatusEnum;
import io.swagger.v3.oas.annotations.media.Schema;
import lombok.Data;
import org.springframework.format.annotation.DateTimeFormat;

import java.time.LocalDateTime;

import static cn.econets.blossom.framework.common.util.date.DateUtils.FORMAT_YEAR_MONTH_DAY_HOUR_MINUTE_SECOND;

/**
 * Payback Base VO，Provide for adding、Modify、Detailed sub VO Use
 * If VO Fields with differences，Please do not add here，Influence Swagger Document Generation
 */
@Data
public class CrmReceivableBaseVO {

    @Schema(description = "Payment Number",requiredMode = Schema.RequiredMode.REQUIRED, example = "31177")
    private String no;

    // TODO @liuhongfeng：Payment collection plan number
    @Schema(description = "Payment Refund Plan", example = "31177")
    private Long planId;

    // TODO @liuhongfeng：Customer Number
    @Schema(description = "Customer Name", example = "4963")
    private Long customerId;

    // TODO @liuhongfeng：Customer Number
    @Schema(description = "Contract Name", example = "30305")
    private Long contractId;

    // TODO @liuhongfeng：This field，It should not be transmitted by the front end，It is generated by the backend itself
    @Schema(description = "Approval Status", example = "1")
    @InEnum(CrmAuditStatusEnum.class)
    private Integer checkStatus;

    @Schema(description = "Payment Date")
    @DateTimeFormat(pattern = FORMAT_YEAR_MONTH_DAY_HOUR_MINUTE_SECOND)
    private LocalDateTime returnTime;

    @Schema(description = "Payment method", example = "2")
    private Integer returnType;

    @Schema(description = "Amount of payment received，Unit：Points", example = "31859")
    private Integer price;

    // TODO @liuhongfeng：Person in charge number
    @Schema(description = "Person in charge", example = "22202")
    private Long ownerUserId;

    @Schema(description = "Display order")
    private Integer sort;

    @Schema(description = "Remarks", example = "Remarks")
    private String remark;


}
